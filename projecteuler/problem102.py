#coding: utf-8

import math

def triangleContained(alist):
    # Compute the angle of lines which 
    # generated by connections of initial
    # points and vertex of triangle
    x = math.acos((alist[0]*alist[2]+alist[1]*alist[3]) /
            (math.sqrt(alist[0]**2+alist[1]**2) *
                math.sqrt(alist[2]**2+alist[3]**2)))
    y = math.acos((alist[0]*alist[4]+alist[1]*alist[5]) /
            (math.sqrt(alist[0]**2+alist[1]**2) *
                math.sqrt(alist[4]**2+alist[5]**2)))
    z = math.acos((alist[4]*alist[2]+alist[5]*alist[3]) /
            (math.sqrt(alist[4]**2+alist[5]**2) *
                math.sqrt(alist[2]**2+alist[3]**2)))
    if abs((x+y+z) - 2*math.pi) < 1e-10:
        return True
    return False

if __name__ == '__main__':
    Count = 0
    with open('triangles.txt') as files:
        lines = files.readlines()
        for line in lines:
            line = line.split('\n')
            line = line[0].split(',')
            line = [int(item) for item in line]
            if triangleContained(line):
                Count = Count + 1
    print(Count)
